package tugaspbocrud;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Syafaldi
 */
public class deleteData extends javax.swing.JFrame {
    public static String nim;
    public ResultSet resultSet;
    public Statement statement;
    
    public deleteData() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane = new javax.swing.JScrollPane();
        TabelMahasiswa = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnHapus = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        TabelMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TabelMahasiswa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TabelMahasiswaMouseClicked(evt);
            }
        });
        jScrollPane.setViewportView(TabelMahasiswa);

        jLabel1.setText("DATA  MAHASISWA");

        btnHapus.setText("Hapus Data");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(234, 234, 234)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(btnHapus))
                            .addComponent(jLabel1))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(btnHapus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
      DBConfig koneksi = new DBConfig();
      try{
          statement = koneksi.getKoneksi().createStatement();
          String sql = "DELETE FROM data_mhs WHERE NIM='" + nim +"'";
          statement.executeUpdate(sql);
          JOptionPane.showMessageDialog(rootPane,"Data dihapus");
          statement.close();
          tampilkan();
      }catch(ClassNotFoundException ex) {
        Logger.getLogger(inputData.class.getName()).log(Level.SEVERE, null, ex);
      }catch (SQLException ex) {
        Logger.getLogger(inputData.class.getName()).log(Level.SEVERE, null, ex);
      }
    }//GEN-LAST:event_btnHapusActionPerformed

    private void TabelMahasiswaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TabelMahasiswaMouseClicked
        int baris = TabelMahasiswa.rowAtPoint(evt.getPoint());
        nim = TabelMahasiswa.getValueAt(baris,0).toString();
    }//GEN-LAST:event_TabelMahasiswaMouseClicked
    
 
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TabelMahasiswa;
    private javax.swing.JButton btnHapus;
    private javax.swing.JLabel jLabel1;
    public javax.swing.JScrollPane jScrollPane;
    // End of variables declaration//GEN-END:variables
    
    public void tampilkan(){
        DefaultTableModel model = new DefaultTableModel(); 
        model.addColumn("NIM");
        model.addColumn("NAMA");
        model.addColumn("ALAMAT");
        DBConfig koneksi = new DBConfig();
        
        try{
            int no = 1;
            statement = koneksi.getKoneksi().createStatement();
            String sql = "SELECT * FROM data_mhs";
            resultSet = statement.executeQuery(sql);
            while (resultSet.next()){
                model.addRow(new Object[]{resultSet.getString(1),resultSet.getString(2),resultSet.getString(3)});
            }
            TabelMahasiswa.setModel(model);
        }catch(SQLException e){
            System.out.println("Error : " + e.getMessage());
        }catch(ClassNotFoundException ex) {
            Logger.getLogger(outputData.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
